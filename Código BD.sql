DROP DATABASE db_omega_projects;
-- CREAMOS LA BASE DE DATOS DEL SISTEMA OMEGA PROJECTS 
create database db_omega_projects;
-- UTILIZAMOS LA BASE DEL SISTEMA OMEGA PROJECTS 
use db_omega_projects;

-- CREAMOS LA TABLA DE USUARIO CON LOS CAMPOS QUE IDENTIFICAN A CADA USUARIO. 
DROP TABLE if exists USUARIOS_LOGIN;
CREATE TABLE usuarios_login(
nom_usuario varchar(30),
correo varchar (60),
contrasena varchar (40),
tipo_usuario varchar (30),
area_pertenencia varchar (20)
);

ALTER TABLE usuarios_login
ADD ID INT (1) auto_increment PRIMARY KEY;

ALTER TABLE usuarios_login
ADD TOKEN VARCHAR (100);

ALTER TABLE usuarios_login
ADD VERIFICADO VARCHAR (2);

-- INSERTAMOS LOS USUARIOS QUE TENDRAN ACCESO AL SISTEMA 
INSERT INTO usuarios_login (nom_usuario, correo, contrasena, tipo_usuario, area_pertenencia) 
  VALUES ('Diana Solano','solanodiana0514@gmail.com', SHA1('contraDiana'), 'ABD','Base de Datos');
  
INSERT INTO usuarios_login (nom_usuario, correo, contrasena, tipo_usuario, area_pertenencia) 
  VALUES ('Ixchel Valadez','dashix_2010@hotmail.com', SHA1('contraIxchel'), 'ABD','Líder de Proyecto');  

INSERT INTO usuarios_login (nom_usuario, correo, contrasena, tipo_usuario, area_pertenencia) 
  VALUES ('Roberto Vargas','robertsolarc12@gmail.com', SHA1('contraRoberto'), 'Sofisticado','Arquitectura');
  
INSERT INTO usuarios_login (nom_usuario, correo, contrasena, tipo_usuario, area_pertenencia) 
  VALUES ('Adrian Morales','amoralesaldaco@gmail.com', SHA1('contraAdrian'), 'Sofisticado','Análisis');
  
INSERT INTO usuarios_login (nom_usuario, correo, contrasena, tipo_usuario, area_pertenencia) 
  VALUES ('Ha Hoang Quoc','hahoangquoc@gmail.com', SHA1('contraHaHoang'), 'Programador de App','Desarrollo');  
  
INSERT INTO usuarios_login (nom_usuario, correo, contrasena,  tipo_usuario, area_pertenencia) 
  VALUES ('Dario Torres','dario.brons@gmail.com', SHA1('contraDario'), 'Sofisticado','Pruebas');  

INSERT INTO usuarios_login (nom_usuario, correo, contrasena, tipo_usuario, area_pertenencia) 
  VALUES ('Estefania Arreola','phanie2098@gmail.com', SHA1('contraEstefani'), 'Sofisticado','Diseño');  
  
Select* from usuarios_login;

USE DB_OMEGA_PROJECTS;
-- SE CREA LA TABLA PROYECTOS, QUE ALMACENARA LOS DATOS RELEVANTES QUE IDENTIFICARAN A CADA PROYECTO. 
CREATE TABLE PROYECTO(
COD_PROYECTO VARCHAR (11) PRIMARY KEY,
NOM_PROYECTO VARCHAR(40),
FECHA_INICIO DATE,
TIPO_PROYECTO VARCHAR(20),
AVANCE INT (2),
TIEMPO_ESTIPULADO VARCHAR (60),
TIEMPO_REAL VARCHAR (60)
);
-- TABLA USUARIOS_PROYECTOS ALMACENARA LAS LLAVES FORANEAS DE USUARIOS_LOGIN Y PROYECTO
-- PARA IDENTIFICAR QUÉ USUARIOS LE PERTENECEN A CUÁL PROYECTO. 
CREATE TABLE USUARIOS_PROYECTO (
ID1 INT (1) ,
FOREIGN KEY (ID1) REFERENCES USUARIOS_LOGIN(ID),
COD_PROYECTO1 VARCHAR (11),
FOREIGN KEY (COD_PROYECTO1)REFERENCES PROYECTO (COD_PROYECTO));
-- TABLA MATERIAL, ALMACENARA LOS DATOS DE CADA MATERIAL 
CREATE TABLE MATERIAL (
COD_MATERIAL INT NOT NULL PRIMARY KEY ,
NOMBRE_MATERIAL VARCHAR (20),
DESC_MATERIAL VARCHAR (60),
ESTATUS VARCHAR (11),
COD_PROYECTO2  VARCHAR (11),
FOREIGN KEY (COD_PROYECTO2) REFERENCES PROYECTO(COD_PROYECTO));
-- TABLA RIESGOS, CONTENDRA UN NUMERO DE IDENTIFICACION Y UNA DESCRIPCION DEL MISMO. 
CREATE TABLE RIESGO (
COD_RIESGO INT NOT NULL PRIMARY KEY,
NOM_RIESGO VARCHAR(20),
TIPO_RIESGO VARCHAR (40),
FECHA_INICIO DATE,
MOTIVO VARCHAR (60));
-- TABLA PROYECTO_RIESGO, SURGE DE LA RELACION DE LA TABLA PROYECTO Y RIESGO, ALMACENA CUALES RIESGOS PRESENTA UN PROYECTO 
-- Y LOS RIESGOS QUE ESTAN PRESENTES EN UN PROYECTO
CREATE TABLE PROYECTO_RIESGO(
COD_PROYECTO3 VARCHAR (11),
FOREIGN KEY (COD_PROYECTO3) REFERENCES PROYECTO (COD_PROYECTO),
COD_RIESGO1 INT NOT NULL,
FOREIGN KEY (COD_RIESGO1) REFERENCES RIESGO(COD_RIESGO));
-- TABLA PRESUPUESTO, ALAMCENARA LOS DATOS REFERENTES AL PRESUPUESTO, LA CANTIDAD ESYIPULADA Y REAL, AL IGUAL LAS CANTIDADES QUE SE HAN INVERTIDO Y LAS QUE SIGUEN DISPONIBLES 
CREATE TABLE PRESUPUESTO (
COD_PRESUPUESTO INT NOT NULL PRIMARY KEY,
MONTO_ESTIPULADO FLOAT (8),
MONTO_REAL FLOAT (8),
MONTO_INVERTIDO FLOAT (8),
MONTO_DISPONIBLE FLOAT (8),
COD_PROYECTO4 VARCHAR (11),
FOREIGN KEY (COD_PROYECTO4)REFERENCES PROYECTO (COD_PROYECTO));
-- TABLA AUTORIZACION, CONTIENE LOS DATOS DE CADA AUTORIZACION QUE SE LE REALIZA A UN PRESUPUESTO, 
-- QUIÉN AUTORIZO, LA FECHA, LA HORA Y SE ESPECIFICA SI ES UN AUMENTO O DISMINUCION DEL MISMO. 
CREATE TABLE AUTORIZACION (
COD_AUTORIZACION INT NOT NULL ,
TIPO_AUTORIZACION VARCHAR (11),
FECHA_AUTORIZACION DATE,
HOR_AUTORIZACION TIME,
COD_PRESUPUESTO1 INT NOT NULL,
FOREIGN KEY (COD_PRESUPUESTO1)REFERENCES PRESUPUESTO (COD_PRESUPUESTO),
ID2 INT (1),
FOREIGN KEY (ID2)REFERENCES USUARIOS_LOGIN(ID));
-- TABLA DESVIACION CONTIENE LOS DATOS QUE IDENTIFICAN A LAS DEVACIONES Y REFERENCIA AL PROYECTO AL QUE PERTENECE 
USE DB_OMEGA_PROJECTS;
CREATE TABLE DESVIACION (
CODIGO_DESVIACION INT NOT NULL PRIMARY KEY,
NOM_DESVIACION VARCHAR (20),
DESC_DESVIACION VARCHAR (60),
COD_PROYECTO5 VARCHAR (11),
FOREIGN KEY (COD_PROYECTO5) REFERENCES PROYECTO(COD_PROYECTO));
-- TABLA REMEDIACION CONTIENE LOS DATOS DESCRIPTIVOS DE LA REMEDIACION, AL IGUAL QUE SU REFERENCIA A LA DESVIACION A LA QUE PERTENECE
CREATE TABLE REMEDIACION (
COD_REMEDIACION INT NOT NULL PRIMARY KEY,
NOM_REMEDIACION VARCHAR(20),
FECHA_LIMITE DATE,
IMPACTO  VARCHAR (50),
CODIGO_DESVIACION1 INT NOT NULL,
FOREIGN KEY (CODIGO_DESVIACION1)REFERENCES DESVIACION(CODIGO_DESVIACION));
-- TABLA USUARIOS_REMEDIACION, SURGE DE LA RELACION USUARIOS_LOGIN CON REMEDICAION, YA QUE LOS USUARIOS PUEDEN TENER VARIAS 
-- REMEDIACIONES Y CADA REMEDIACION PUEDE TENER VARIOS USUARIOS
CREATE TABLE USUARIOS_REMEDIACION (
ID3 INT (1),
FOREIGN KEY (ID3)REFERENCES USUARIOS_LOGIN (ID),
COD_REMEDIACION1 INT NOT NULL,
FOREIGN KEY (COD_REMEDIACION1) REFERENCES REMEDIACION (COD_REMEDIACION));
-- AGREGAMOS CAMPOS PARA ALMACENAR MAS INFORMACION DE LOS USUARIOS
ALTER TABLE usuarios_login
ADD TEL_USUARIO VARCHAR (10);
ALTER TABLE usuarios_login
ADD HOR_USUARIO VARCHAR(40);
ALTER TABLE usuarios_login
ADD ESTATUS VARCHAR(10);
-- AGREGAMOS A LA TABLA USUARIOS_PROYECTO EL CAMPO ROL_PROYECTO PARA INDICAR CUAL ES SU FUNCION DENTRO DEL MISMO
ALTER TABLE usuarios_proyecto 
ADD ROL_PROYECTO VARCHAR (25);
-- CREAMOS LA TABLA ACTIVIDAD; PARA ESPECIFICAR LAS ACTIVIDADES QUE SE PUEDEN REALIZAR EN UN PROYECTO
CREATE TABLE ACTIVIDAD (
COD_ACT INT NOT NULL PRIMARY KEY,
NOM_ACT VARCHAR (30),
DESC_ACT VARCHAR (100),
DURACION_ACT VARCHAR (30));
-- ES EL RESULTADO DE LA RELACION DE ACTIVIDAD PROYECTO; INDICA LA ACTIVIDAD Y EL PROYECTO AL QUE PERTENECCE
CREATE TABLE PROYECTO_ACTIVIDAD(
COD_ACT1 INT NOT NULL,
FOREIGN KEY (COD_ACT1)REFERENCES ACTIVIDAD (COD_ACT),
COD_PROYECTO6 VARCHAR (11),
FOREIGN KEY (COD_PROYECTO6)REFERENCES PROYECTO(COD_PROYECTO));
-- ES EL RESULTADO DE LA RELACION DE ACTIVIDAD USUARIO; INDICA LA ACTIVIDAD QUE DEBE REALIZAR ALGUN USUARIO
CREATE TABLE USUARIOS_ACTIVIDAD(
ID4 INT (1),
FOREIGN KEY (ID4)REFERENCES USUARIOS_LOGIN(ID),
COD_ACT2 INT NOT NULL,
FOREIGN KEY (COD_ACT2)REFERENCES ACTIVIDAD (COD_ACT));